# Makefile di "" OS

# File oggetto
ARCH :=x86
OGGETTI := arch/$(ARCH)/boot/boot.o	\
		arch/$(ARCH)/interrupt.o 	\
		arch/$(ARCH)/interrupts.o 	\
		arch/$(ARCH)/io.o 	\
		arch/$(ARCH)/timer.o 	\
		arch/$(ARCH)/pic.o 	\
		arch/$(ARCH)/tabelle.o	\
		arch/$(ARCH)/debug.o	\
		arch/$(ARCH)/mem/mem.o	\
		arch/$(ARCH)/mem/paging.o \
		arch/$(ARCH)/mem/alloc.o	\
		arch/$(ARCH)/mem/bitmap.o	\
		lib/string.o 	\
		shell/shell.o	\
		app/snake/snake.o 	\
		driver/tastiera.o 	\
		fs/vfs.o			\
		fs/fat.o			\
		fs/tmpfs.o			\
		fs/initrd.o			\
		tasks/tasks.o		\
		tasks/schedule.o 	\
		driver/video/vga.o \
		driver/video/vesa.o \
		driver/video/vesadd.o \
		driver/video/draw.o \
		arch/$(ARCH)/start.o
	

# Compilatori e linker
AS  := as
C := gcc
LS  := ld.bfd

# I rispettivi argomenti
ASFLAG := 
CFLAGS  := -O -fstrength-reduce -fomit-frame-pointer -fno-stack-protector -finline-functions -nostdinc -fno-builtin -I include -I arch/include -c 
LSFLAG :=  -Ttext 0x100000 -s --oformat elf32-i386 --script=arch/x86/boot/link.ld 


.PHONY: all clean compila scrivi test debug

all: compila iso test_qemu

compila: $(OGGETTI)
	@$(LS) $(LSFLAG) $(OGGETTI) -o kernel.bin #-Map kernel.map
	@echo "Link dei file oggetto"

scrivi:
	mkdir tmp
	@sudo mount -o loop myos.img tmp
	sudo cp kernel.bin tmp/
	sudo cp tmpfs/initrd tmp/
	sleep 1
	#DEBUG
	@sudo umount /media/os/os_devel/src/tmp
	sudo dd if=myos.img of=/dev/fd0 status=noxfer
	rm -r tmp

clean:
	rm $(OGGETTI) kernel.bin

test: 
	@/usr/bin/bochs -qf ./.bochsrc
	
debug: compila iso
	@bochs -qf ./.debug

test_qemu:
	qemu-i386.static -cdrom myos.iso -soundhw sb16 -usb -net nic -m 128
.S.o: 
	$(AS) $(ASFLAG) $< -o $@

.s.o: 
	@nasm -f elf  $< -o  $@

.c.o: 
	@$(C) $(CFLAGS) $< -o  $@
	
img:
	@mount -o loop myos.img tmp
	cp kernel.bin tmp/
	@sleep 1
	@umount /media/os/myos/tmp
	dd if=myos.img of=/dev/fd0 status=noxfer
iso:
	mkdir iso
	mkdir iso/boot/
	mkdir iso/boot/grub/
	cp grub/stage2_eltorito iso/boot/grub
	cp kernel.bin iso/
	cp grub/menu.lst iso/boot/grub
	cp tmpfs/initrd iso/

	mkisofs -R -b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size 4 -boot-info-table -o myos.iso iso

	rm -r iso
